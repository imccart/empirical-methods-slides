---
title: "Software Setup"
author: "Ian McCarthy | Emory University"
format: 
  revealjs:
    theme: [moon]
    preview-links: auto
    chalkboard:
      boardmarker-width: 5
    slide-number: true
    width: 1600
    height: 900    
#    embed-resources: true
from: markdown+emoji
execute: 
  echo: true
---

```{r}
#| include: false
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, ggplot2, lubridate, gapminder, scales,
               hrbrthemes, gganimate, OECD, here)
```

## Software Installation

1. Download [R](https://www.r-project.org/)
2. Download [RStudio](https://www.rstudio.com/products/rstudio/download/preview/)
3. Download [Git](https://git-scm.com/downloads)
4. Create an account on [GitHub](https://github.com/)

::: {.fragment}
For help and troubleshooting with Git and GitHub, take a look at Jenny Bryan's http://happygitwithr.com.
:::

---

## Checklist

<html>&#9745;</html> Do you have the most recent version of R?
  ```{r}
  version$version.string
  ```


<html>&#9745;</html> Do you have the most recent version of RStudio? (The [preview version](https://www.rstudio.com/products/rstudio/download/preview/) is fine.)
  ```{r eval=FALSE}
  RStudio.Version()$version
  ## Requires an interactive session but should return something like "[1] ‘1.4.1717’"
  ```

<html>&#9745;</html> Have you updated all of your R packages? 
  ```{r eval=FALSE}
  update.packages(ask = FALSE, checkBuilt = TRUE)
  ```
  
---

## Checklist

- Open up the [shell](http://happygitwithr.com/shell.html#shell)
- Windows users, make sure that you installed a Bash-compatible version of the shell. If you installed [Git for Windows](https://gitforwindows.org), then you should be good to go.


---

## Checklist

<html>&#9745;</html> Which version of Git have you installed?
  ```{r eval=FALSE}
  git --version
  ```

<html>&#9745;</html> Did you introduce yourself to Git? (Substitute in your details.)
  ```{r eval=FALSE}
  git config --global user.name 'Ian McCarthy'
  git config --global user.email 'ian.mccarthy@emory.edu'
  git config --global --list
  ```

<html>&#9745;</html> Did you register an account in GitHub?



# Practice with Git and RStudio


---

## Before next class (see http://happygitwithr.com)

1. Download [R](https://www.r-project.org/)
2. Download [RStudio](https://www.rstudio.com/products/rstudio/download/preview/)
3. Download [Git](https://git-scm.com/downloads)
4. Create an account on [GitHub](https://github.com/)
5. Connect RStudio to Git and GitHub
6. Start/clone/fork a repository for this class 


---

## Setting things up

Now we're going to clone a GitHub repository (repo) using RStudio. The video below is from Grant McDermott's class.

<center>
<iframe width="600" height="350" src="https://raw.githack.com/uo-ec607/lectures/master/02-git/02-Git.html#15" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</center>

---

## Some common mistakes for windows users

- Windows folders are *not* files...there is no content without a file. You can't commit or push changes without content.
- Let RStudio/GitHub create the directory (main folder) for you.
- If you're working across devices on your own repo, be sure to pull before starting and push afterward.
- Avoid spaces in file names. Avoid them at all costs. *DO NOT PUT SPACES IN YOUR FILE NAMES.*

>*"A space in a file name is a space in your soul."*


---

## Ideal workflow

Until you are a Git(Hub) expert...

1. Start project on GitHub (fork from another repo if needed)
2. Clone to desktop with RStudio
3. See http://happygitwithr.com for instructions on linking your local repo with a new upstream remote
