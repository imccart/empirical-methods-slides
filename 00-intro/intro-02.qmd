---
title: "Software Setup"
author: "Ian McCarthy | Emory University"
format: 
  revealjs:
    theme: [moon]
    preview-links: auto
    chalkboard:
      boardmarker-width: 5
    slide-number: true
    width: 1600
    height: 900    
#    embed-resources: true
from: markdown+emoji
execute: 
  echo: true
---

```{r}
#| include: false
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, ggplot2, lubridate, gapminder, scales,
               hrbrthemes, gganimate, OECD, here, reticulate)
```

## Software Installation

1. Download [R](https://www.r-project.org/) and/or [Python](https://www.python.org/)
2. Download [Visual Studio Code](https://code.visualstudio.com/)
3. Download [Git](https://git-scm.com/downloads)
4. Create an account on [GitHub](https://github.com/)
5. Download [GitHub Desktop](https://desktop.github.com/download/), [authenticate](https://docs.github.com/en/desktop/installing-and-authenticating-to-github-desktop/authenticating-to-github-in-github-desktop) your account, and [configure](https://docs.github.com/en/desktop/configuring-and-customizing-github-desktop/configuring-git-for-github-desktop) Git for GitHub Desktop

---

## Checklist

- Do you have the most recent version of R?
```{r}
version$version.string
```

- What version of Python do you have?
```{python}
import sys
print(f"Python version: {sys.version}")
```


- Have you installed the proper extensions in VS Code?
  - GitHub Copilot and GitHub Copilot Chat
  - Python and Jupyter
  - Quarto
  - R and R Extension Pack


- If using R, have you updated all of your R packages? 
```{r, eval=FALSE}
update.packages(ask = FALSE, checkBuilt = TRUE, repos='https://cran.us.r-project.org')
```
  

---

## Checklist (for Python)

1. Download [Python](https://www.python.org/). During installation, ensure the option **Add Python to PATH** is checked
2. Install Python Extension in VS Code
3. Set Python Interpreter in VS Code (e.g., the version installed in step 1)
   - Open a Python file
   - Click on the Python interpreter selector in the bottom-left corner of the VS Code window (or use `Ctrl+Shift+P` and search for **"Python: Select Interpreter"**).
4. Install python libraries, `pip install <library>` from terminal


---

## Checklist 

- Which version of Git have you installed?
```{bash}
#| include: false
git --version
```

- Did you register an account in GitHub?

- Did you [authenticate](https://docs.github.com/en/desktop/installing-and-authenticating-to-github-desktop/authenticating-to-github-in-github-desktop) your account and [configure](https://docs.github.com/en/desktop/configuring-and-customizing-github-desktop/configuring-git-for-github-desktop) your local Git for GitHub Desktop?




# Practice with Git, GitHub, VS Code, and GitHub Desktop


---

1. Start a repository on GitHub
2. Clone repository to your local computer
3. Create a basic folder structure
4. Create a ReadMe and a gitignore file in VS Code
5. Commit changes to git
6. Push changes to GitHub


---

## Some common mistakes for windows users

- Windows folders are *not* files...there is no content without a file. You can't commit or push changes without content.
- If you're working across devices on your own repo, be sure to pull before starting and push afterward.
- Avoid spaces in file names. Avoid them at all costs. *DO NOT PUT SPACES IN YOUR FILE NAMES.*

>*"A space in a file name is a space in your soul."*


---

## Ideal workflow

Until you are a Git(Hub) expert...

1. Start project on GitHub (fork from another repo if needed)
2. Clone to local computer with GitHub Desktop
3. Set up structure and basic files


---

## Recommended Structure

```
homework1
|
|   README.md
|   .gitignore
|
|---data (not tracked in git or pushed to github)
|   |   input (symbolic links)
|   |   output (analytic data sets)
|
|---submission1
|   |---data-code
|   |---analysis
|   |---results
|   |   mccarthy-i-hwk1-1.pdf
|
|---submission2
|   |---data-code
|   |---analysis
|   |---results
|   |   mccarthy-i-hwk1-2.pdf
|
```
